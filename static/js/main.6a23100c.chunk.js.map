{"version":3,"sources":["employees.csv","helpers.js","styles.js","App.js","index.js"],"names":["errorColor","validatePhoneNumber","value","match","formatIncome","income","slice","Number","toFixed","formatStates","statesArr","split","map","state","normalize","length","join","columns","name","selector","conditionalCellStyles","when","row","style","backgroundColor","format","phone","email","age","isInteger","experience","validateExperience","cell","textTransform","toLowerCase","display","futureDate","moment","Date","diff","now","isValid","validateExperationDate","findDuplicates","arr","cell1","cell2","find","item","id","Button","styled","button","Container","div","ErrorMessage","h2","App","useState","rows","setRows","error","setError","onClick","Papa","parse","employeesData","download","complete","headers","data","includes","header","filteredData","idx","dataWithDuplicates","duplicate","title","highlightOnHover","pagination","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a23100c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/employees.35c2db2e.csv\";","import normalize from \"us-states-normalize\";\r\nimport moment from \"moment\";\r\n\r\nconst errorColor = \"rgba(242, 38, 19, 0.3)\";\r\n\r\nconst formatPhoneNumber = (value) => `+1${value.slice(-10)}`;\r\n\r\nconst validateEmail = (value) =>\r\n  value.match(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,})+$/);\r\n\r\nconst validatePhoneNumber = (value) => value.match(/^((\\+?\\d{1}?)?\\d{10})$/);\r\n\r\nconst validateAge = (value) => Number.isInteger(+value) && value > 0;\r\n\r\nconst validateExperience = (row) =>\r\n  Number.isInteger(+row.experience) &&\r\n  +row.experience >= 0 &&\r\n  +row.age - 21 >= +row.experience;\r\n\r\nconst formatIncome = (value) => {\r\n  const income = value.slice(1);\r\n  return Number(income).toFixed(2);\r\n};\r\n\r\nconst validateHasChildren = (value) =>\r\n  value.toLowerCase() === \"true\" || value.toLowerCase() === \"false\";\r\n\r\nconst formatStates = (value) => {\r\n  const statesArr = value.split(\"|\").map((state) => normalize(state));\r\n  return statesArr.length > 1 ? statesArr.join(\", \") : statesArr.join(\"\");\r\n};\r\n\r\nconst validateExperationDate = (value) => {\r\n  const futureDate = moment(new Date(value)).diff(moment(Date.now())) > 0;\r\n\r\n  const validDate =\r\n    moment(value, \"YYYY-MM-DD\", true).isValid() ||\r\n    moment(value, \"MM/DD/YYYY\", true).isValid();\r\n\r\n  return validDate && futureDate;\r\n};\r\n\r\nconst validateLicenseNumber = (value) => value.match(/^[a-zA-Z0-9]{6}$/);\r\n\r\nexport const columns = [\r\n  {\r\n    name: \"Full Name\",\r\n    selector: \"full name\",\r\n    conditionalCellStyles: [\r\n      {\r\n        when: (row) => !row?.[\"full name\"],\r\n        style: {\r\n          backgroundColor: errorColor,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: \"Phone\",\r\n    selector: \"phone\",\r\n    format: (row) =>\r\n      row?.phone && validatePhoneNumber(row.phone)\r\n        ? formatPhoneNumber(row.phone)\r\n        : row.phone,\r\n    conditionalCellStyles: [\r\n      {\r\n        when: (row) =>\r\n          (row?.phone && !validatePhoneNumber(row.phone)) || !row?.phone,\r\n        style: {\r\n          backgroundColor: errorColor,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: \"Email\",\r\n    selector: \"email\",\r\n    conditionalCellStyles: [\r\n      {\r\n        when: (row) =>\r\n          (row?.email && !validateEmail(row?.email)) || !row?.email,\r\n        style: {\r\n          backgroundColor: errorColor,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: \"Age\",\r\n    selector: \"age\",\r\n    conditionalCellStyles: [\r\n      {\r\n        when: (row) => (row?.age && !validateAge(row.age)) || !row?.age,\r\n        style: {\r\n          backgroundColor: errorColor,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: \"Experience\",\r\n    selector: \"experience\",\r\n    conditionalCellStyles: [\r\n      {\r\n        when: (row) =>\r\n          (row?.experience && !validateExperience(row)) || !row?.experience,\r\n        style: {\r\n          backgroundColor: errorColor,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: \"Yearly Income\",\r\n    selector: \"yearly income\",\r\n    format: (row) =>\r\n      row?.[\"yearly income\"] && formatIncome(row[\"yearly income\"]),\r\n    conditionalCellStyles: [\r\n      {\r\n        when: (row) =>\r\n          (row?.[\"yearly income\"] &&\r\n            formatIncome(row[\"yearly income\"]) > 1000000) ||\r\n          !row?.[\"yearly income\"],\r\n        style: {\r\n          backgroundColor: errorColor,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: \"Has Children\",\r\n    selector: \"has children\",\r\n    cell: (row) => (\r\n      <span style={{ textTransform: \"uppercase\" }}>\r\n        {row?.[\"has children\"] ? row?.[\"has children\"] : \"false\"}\r\n      </span>\r\n    ),\r\n    conditionalCellStyles: [\r\n      {\r\n        when: (row) =>\r\n          row?.[\"has children\"] && !validateHasChildren(row[\"has children\"]),\r\n        style: {\r\n          backgroundColor: errorColor,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: \"License States\",\r\n    selector: \"license states\",\r\n    cell: (row) =>\r\n      (row?.[\"license states\"] && (\r\n        <div style={{ display: \"flex\" }}>\r\n          {formatStates(row[\"license states\"])}\r\n        </div>\r\n      )) ||\r\n      !row?.[\"license states\"],\r\n  },\r\n  {\r\n    name: \"Expiration Date\",\r\n    selector: \"expiration date\",\r\n    conditionalCellStyles: [\r\n      {\r\n        when: (row) =>\r\n          (row?.[\"expiration date\"] &&\r\n            !validateExperationDate(row[\"expiration date\"])) ||\r\n          !row?.[\"expiration date\"],\r\n        style: {\r\n          backgroundColor: errorColor,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: \"License Number\",\r\n    selector: \"license number\",\r\n    conditionalCellStyles: [\r\n      {\r\n        when: (row) =>\r\n          (row?.[\"license number\"] &&\r\n            !validateLicenseNumber(row?.[\"license number\"])) ||\r\n          !row?.[\"license number\"],\r\n        style: {\r\n          backgroundColor: errorColor,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: \"ID\",\r\n    selector: \"id\",\r\n  },\r\n  {\r\n    name: \"Duplicate with\",\r\n    selector: \"duplicate\",\r\n  },\r\n];\r\n\r\nexport const findDuplicates = (arr, value, cell1, cell2) =>\r\n  arr.find((item) => {\r\n    if (!(item[cell1] && value[cell1]) || !(item[cell2] && value[cell2]))\r\n      return undefined;\r\n\r\n    return (\r\n      item.id !== value.id &&\r\n      (item[cell1]?.toLowerCase() === value[cell1]?.toLowerCase() ||\r\n        item[cell2] === value[cell2])\r\n    );\r\n  })?.id;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Button = styled.button`\r\n  padding: 8px 20px;\r\n  background-color: rgba(11, 156, 49, 0.6);\r\n  outline: none;\r\n  border: 1px solid #555;\r\n  color: #fff;\r\n  transition: all ease-in-out 0.3s;\r\n\r\n  &:hover {\r\n    background-color: rgba(11, 156, 49, 0.4);\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n  justify-content: center;\r\n  padding: 50px 30px\r\n  }\r\n`;\r\n\r\nexport const ErrorMessage = styled.h2`\r\n  padding: 30px 60px;\r\n  background-color: rgba(242, 38, 19, 0.3);\r\n  border: 1px solid red;\r\n`;\r\n","import React, { useState } from \"react\";\nimport Papa from \"papaparse\";\nimport DataTable from \"react-data-table-component\";\n\nimport employeesData from \"./employees.csv\";\n// import employeesJson from \"./employees.json\";\nimport { columns, findDuplicates } from \"./helpers\";\nimport { Button, Container, ErrorMessage } from \"./styles\";\n\nconst App = () => {\n  const [rows, setRows] = useState([]);\n  const [error, setError] = useState(false);\n\n  const checkHeaders = () => {\n    Papa.parse(employeesData, {\n      download: true,\n      complete: ({ data }) => {\n        const headers = data[0].map((item) => item.toLowerCase());\n\n        if (\n          !headers.includes(\"full name\") ||\n          !headers.includes(\"email\") ||\n          !headers.includes(\"phone\")\n        ) {\n          setError(true);\n          return;\n        }\n      },\n    });\n  };\n\n  const handleImportData = () => {\n    try {\n      checkHeaders();\n\n      Papa.parse(employeesData, {\n        download: true,\n        header: true,\n        complete: ({ data }) => {\n          const filteredData = data.map((row, idx) => ({\n            ...row,\n            id: idx + 1,\n          }));\n\n          const dataWithDuplicates = filteredData.map((row) => ({\n            ...row,\n            duplicate:\n              findDuplicates(filteredData, row, \"email\", \"phone\") ?? null,\n          }));\n\n          setRows(dataWithDuplicates);\n        },\n      });\n    } catch (error) {\n      setError(true);\n      return;\n    }\n  };\n\n  return (\n    <Container>\n      <Button onClick={handleImportData}>Import Users</Button>\n\n      {error ? (\n        <ErrorMessage>File format is not correct</ErrorMessage>\n      ) : rows.length ? (\n        <DataTable\n          title=\"Employees\"\n          columns={columns}\n          data={rows}\n          highlightOnHover\n          pagination\n        />\n      ) : null}\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}